// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	entity "github.com/ViniAlvesMartins/tech-challenge-fiap-payment/internal/entities/entity"
	order "github.com/ViniAlvesMartins/tech-challenge-fiap-payment/internal/external/service/order"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderService is a mock of OrderService interface.
type MockOrderService struct {
	ctrl     *gomock.Controller
	recorder *MockOrderServiceMockRecorder
}

// MockOrderServiceMockRecorder is the mock recorder for MockOrderService.
type MockOrderServiceMockRecorder struct {
	mock *MockOrderService
}

// NewMockOrderService creates a new mock instance.
func NewMockOrderService(ctrl *gomock.Controller) *MockOrderService {
	mock := &MockOrderService{ctrl: ctrl}
	mock.recorder = &MockOrderServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderService) EXPECT() *MockOrderServiceMockRecorder {
	return m.recorder
}

// GetById mocks base method.
func (m *MockOrderService) GetById(id int) (*order.GetByIdResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(*order.GetByIdResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockOrderServiceMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockOrderService)(nil).GetById), id)
}

// MockSnsService is a mock of SnsService interface.
type MockSnsService struct {
	ctrl     *gomock.Controller
	recorder *MockSnsServiceMockRecorder
}

// MockSnsServiceMockRecorder is the mock recorder for MockSnsService.
type MockSnsServiceMockRecorder struct {
	mock *MockSnsService
}

// NewMockSnsService creates a new mock instance.
func NewMockSnsService(ctrl *gomock.Controller) *MockSnsService {
	mock := &MockSnsService{ctrl: ctrl}
	mock.recorder = &MockSnsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSnsService) EXPECT() *MockSnsServiceMockRecorder {
	return m.recorder
}

// SendMessage mocks base method.
func (m *MockSnsService) SendMessage(ctx context.Context, message entity.PaymentMessage) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMessage", ctx, message)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMessage indicates an expected call of SendMessage.
func (mr *MockSnsServiceMockRecorder) SendMessage(ctx, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMessage", reflect.TypeOf((*MockSnsService)(nil).SendMessage), ctx, message)
}
